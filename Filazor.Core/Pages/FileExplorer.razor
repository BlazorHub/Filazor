@page "/main"

@using Filazor.Core.Data

@inject FileSystemService FSService


<style>

    /* Remove default bullets */
    ul, #FSTreeView {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    /* Remove margins and padding from the parent ul */
    #FSTreeView {
        margin: 0;
        padding: 0;
    }

    li > span:hover {
        background-color: aliceblue;
        border: 1px solid;
        border-color: deepskyblue;
    }

    li span {
        padding-left: 5px;
    }
    li li span { 
        padding-left: 20px; 
    }
    li li li span {
        padding-left: 35px;
    }
    li li li li span {
        padding-left: 50px;
    }
    li li li li li span {
        padding-left: 65px;
    }
    li li li li li li span {
        padding-left: 80px;
    }
    li li li li li li li span {
        padding-left: 95px;
    }
    li li li li li li li li span {
        padding-left: 110px;
    }
    li li li li li li li li li span {
        padding-left: 125px;
    }
    li li li li li li li li li li span {
        padding-left: 140px;
    }
    li li li li li li li li li li li span {
        padding-left: 155px;
    }
    li li li li li li li li li li li li span {
        padding-left: 170px;
    }
    li li li li li li li li li li li li li span {
        padding-left: 185px;
    }
    li li li li li li li li li li li li li li span {
        padding-left: 200px;
    }
    li li li li li li li li li li li li li li li span {
        padding-left: 215px;
    }
    li li li li li li li li li li li li li li li li span {
        padding-left: 230px;
    }

    /* Style the caret/arrow */
    .caret {
        cursor: pointer;
        user-select: none; /* Prevent text selection */
    }

    /* Create the caret/arrow with a unicode, and style it */
    .caret::before {
        content: "\276F";
        color: darkgray;
        display: inline-block;
        margin-right: 3px;
    }

    /* Rotate the caret/arrow icon when clicked on (using JavaScript) */
    .caret-down::before {
        transform: rotate(90deg);
        color: black;
    }

    /* Hide the nested list */
    .nested {
        display: none;
    }

    /* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
    .active {
        display: block;
    }

    .item-selected {
        background-color: lightgray;
    }

    .row > div {
        border: 1px solid lightgrey;
    }
</style>

@if (string.IsNullOrEmpty(hostName))
{
    <p><em>Can not find host..</em></p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col px-1">
                <p class="text-center mb-0 py-1" style="color: dimgray"><strong>File Explorer</strong></p>
            </div>
        </div>

        <div class="row">
            <div class="col px-1">
                <Filazor.Core.Pages.Controls.FileNavigationBar />
            </div>
        </div>

        <div class="row" style="height: 600px;">
            <div class="col-4 px-1 py-1">
                <ul id="FSTreeView">
                    <li>
                        <span class="caret @caretDirection @selectedMachine" style="display: block;" @onclick="OnClickHostItem" >
                            <i class="material-icons align-middle" style="color: dimgrey">
                                computer
                            </i>
                            <small>@hostName</small>
                        </span>
                        @if (driveInfos != null)
                        {
                            <ul class="nested @showDrives">
                            @foreach (var driveInfo in driveInfos)
                            {
                                <li>
                                    <Filazor.Core.Pages.Controls.FSTreeNode IsDrive=true DriveVolumeLabel=@driveInfo.VolumeLabel TargetRootDirectoryInfo=@driveInfo.RootDirectory />
                                </li>
                            }
                            </ul>
                        }
                    </li>
                </ul>
            </div>
            <div class="col-8 px-1">

            </div>
        </div>
    </div>
}


@code {
    private string hostName;
    private System.IO.DriveInfo[] driveInfos;

    private string caretDirection;
    private string selectedMachine;
    private string showDrives;


    protected override async Task OnInitializedAsync()
    {
        hostName = await FSService.GetHostName();
    }

    private async void OnClickHostItem()
    {
        driveInfos = await FSService.GetDriveListAsync();

        caretDirection = string.IsNullOrEmpty(caretDirection) ? "caret-down" : "";
        showDrives = string.IsNullOrEmpty(showDrives) ? "active" : "";
        selectedMachine = string.IsNullOrEmpty(selectedMachine) ? "item-selected" : "";

        await InvokeAsync(async () => { this.StateHasChanged(); });
    }
}

