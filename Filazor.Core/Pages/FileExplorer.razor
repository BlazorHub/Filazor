@page "/main"

@using Filazor.Core.Data

@inject FileSystemService FSService


<style>
    /* Remove default bullets */
    ul, #FSTreeView {
        list-style-type: none;
    }

    /* Remove margins and padding from the parent ul */
    #FSTreeView {
        margin: 0;
        padding: 0;
    }
</style>

@if (driveInfos == null)
{
    <p><em>Can not find drive in this device..</em></p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-12">
                <Filazor.Core.Pages.Controls.FileNavigationBar />
            </div>
        </div>
        <div class="row">
            <div class="col">

            </div>
        </div>
        <div class="row">
            <div class="col">
                <ul id="FSTreeView">
                    @foreach (var driveInfo in driveInfos)
                    {
                        <li>
                            <Filazor.Core.Pages.Controls.DriveTreeNode RootInfo="@driveInfo" ChildDirInfos="@dirInfoDic[@driveInfo.Name]" />
                        </li>
                    }
                </ul>
            </div>
            <div class="col">
                File ListView
            </div>
        </div>
    </div>
}


@code {

    private System.IO.DriveInfo[] driveInfos;
    private Dictionary<string, System.IO.DirectoryInfo[]> dirInfoDic = new Dictionary<string, System.IO.DirectoryInfo[]>();



    protected override async Task OnInitializedAsync()
    {
        driveInfos = await FSService.GetDriveListAsync();

        foreach (var driveInfo in driveInfos)
        {
            var dirInfo = await FSService.GetDirectoryInfos(driveInfo.Name);
            if (dirInfo != null && dirInfo.Length > 0)
            {
                dirInfoDic.Add(driveInfo.Name, dirInfo);
            }
        }
    }

    private async void Test()
    {


        await InvokeAsync(async () => { this.StateHasChanged(); });
    }

}

